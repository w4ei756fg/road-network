<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

/* 도로 모양
 * 
 * 0 직선
 * 1 곡선
 * 2 자유형
 */
modeRoadShape = 0;

/* 도로 툴 */
modeRoad = 0;

/* 도로 긋기 단계 */
stageRoad = 0;

/* 도로 긋기 좌표 */
for(var i = 0; i &lt; 3; i++) {
    roadToolPoint[i] = ds_list_create();
}

pocusPoint = ds_list_create();

pocus_x = mouse_x;
pocus_y = mouse_y;
pocus_id = -1;
pocus_ind = 0;

/* 노드, 엣지 색인 */
node = ds_list_create();
edge = ds_list_create();

/* 도로 긋기 데드존 */
deadzone = 10;

draw_set_font(fntSystem);
global.debug_margin = 14;
instance_create(0, 0, roadPreset);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pocus_x = mouse_x;
pocus_y = mouse_y;
pocus_id = -1;
pocus_ind = 0;
if (modeRoad == 1) {
    ds_list_destroy(pocusPoint);
    pocusPoint = getNearestPointable(mouse_x, mouse_y, deadzone);
    pocus_x = pocusPoint[| 0];
    pocus_y = pocusPoint[| 1];
    pocus_id = -1;
    pocus_ind = 0;
    if (ds_list_size(pocusPoint) &gt; 2) {
        pocus_id = pocusPoint[| 2];
        if (ds_list_size(pocusPoint) &gt; 3)
            pocus_ind = pocusPoint[| 3];
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (modeRoad == 1) {
    switch(modeRoadShape) {
        case 0: // 직선
        ds_list_copy(roadToolPoint[stageRoad], pocusPoint);
        if(stageRoad = 1) {
            for(var i = 0; i &lt; 2; i++) {
                var point = roadToolPoint[i];
                if(ds_list_size(point) == 2) { // 새 노드
                    // 노드 생성
                    ds_list_add(point, addList(node, point[| 0], point[| 1], CrossRoad));
                } else if(ds_list_size(point) == 4) { // 기존 도로에 결합
                    point[| 2] = cutRoad(point[| 2], point[| 3]).bid;
                    ds_list_delete(point, 3);
                }
            }
            //도로 생성
            var newRoad = addRoad(ds_list_find_value(roadToolPoint[0], 2),
                                    ds_list_find_value(roadToolPoint[1], 2), 
                                    (ds_list_find_value(roadToolPoint[0], 0) + ds_list_find_value(roadToolPoint[1], 0)) / 2, 
                                    (ds_list_find_value(roadToolPoint[0], 1) + ds_list_find_value(roadToolPoint[1], 1)) / 2, roadPreset.preset[0]);
            stageRoad = 0;
        }
        else 
            stageRoad++;
        break;
        
        case 1: // 곡선
        ds_list_copy(roadToolPoint[stageRoad], pocusPoint);
        if(stageRoad = 2) {
            for(var i = 0; i &lt; 3; i += 2) {
                var point = roadToolPoint[i];
                if(ds_list_size(point) == 2) { // 새 노드
                    // 노드 생성
                    ds_list_add(point, addList(node, point[| 0], point[| 1], CrossRoad));
                } else if(ds_list_size(point) == 4) { // 기존 도로에 결합
                    point[| 2] = cutRoad(point[| 2], point[| 3]).bid;
                    ds_list_delete(point, 3);
                }
            }
            //도로 생성
            var newRoad = addRoad(ds_list_find_value(roadToolPoint[0], 2),
                                    ds_list_find_value(roadToolPoint[2], 2), 
                                    ds_list_find_value(roadToolPoint[1], 0), 
                                    ds_list_find_value(roadToolPoint[1], 1), roadPreset.preset[0]);
            stageRoad = 0;
        }
        else 
            stageRoad++;
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_black);
draw_text(0, 0, "fps_real: " + string(fps_real));
draw_text(0, 15, "modeRoadShape: " + string(modeRoadShape));
draw_text(0, 15 + global.debug_margin, "modeRoad: " + string(modeRoad));
draw_text(0, 15 + global.debug_margin*2, "stageRoad: " + string(stageRoad));
for(var i = 0; i &lt; ds_list_size(pocusPoint); i++)
    draw_text(0, 25 + global.debug_margin*3 + global.debug_margin*i, "pocusPoint[" + string(i) + "]: " + string(pocusPoint[| i]));

/* cursor */
if (ds_list_size(pocusPoint) &gt; 1) {
    draw_set_color(c_fuchsia);
    draw_circle(pocusPoint[| 0], pocusPoint[| 1], deadzone, 1);
}

/* for debug
for(var i = 0; i &lt; 3; i++) {
    draw_text(0, 70 + 60*i, "mx[" + string(i) + "]: " + string(mx[i]));
    draw_text(0, 90 + 60*i, "my[" + string(i) + "]: " + string(my[i]));
    draw_text(0, 110 + 60*i, "mid[" + string(i) + "]: " + string(mid[i]));
}
*/

//road tool

if (modeRoad == 1) {
    draw_set_color(c_fuchsia);
    for(var i = 0; i &lt; stageRoad; i++) {
        var point = roadToolPoint[i];
        //preview circle
        draw_circle(point[| 0], point[| 1], 10, 1);
    }
    switch(modeRoadShape) {
        case 0: // 직선
        case 1: // 곡선
        var point0 = roadToolPoint[0], point1 = roadToolPoint[1];
        if (stageRoad == 1) {
            draw_line(point0[| 0], point0[| 1], pocusPoint[| 0], pocusPoint[| 1]);
        } else if (stageRoad == 2) {
            var cur = makeBezierCurve(point0[| 0], point0[| 1], pocusPoint[| 0], pocusPoint[| 1], point1[| 0], point1[| 1], 1);
            draw_curve(cur);
            ds_list_destroy(cur);
        }
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="84">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>modeRoadShape = (modeRoadShape + 1) % 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>modeRoad = !modeRoad;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
